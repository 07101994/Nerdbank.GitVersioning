<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>b7de4122-9e90-43de-be44-454315cfae99</ProjectGuid>
  </PropertyGroup>
  <PropertyGroup>
    <NuProjPath>$(UserProfile)\.nuget\packages\NuProj\0.11.14-beta\tools\</NuProjPath>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutDir>..\..\bin\$(Configuration)\</OutDir>
  </PropertyGroup>
  <Import Project="$(NuProjPath)\NuProj.props" Condition="Exists('$(NuProjPath)\NuProj.props')" />
  <PropertyGroup Label="Configuration">
    <ReleaseNotes>
    </ReleaseNotes>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <NoDefaultExcludes>true</NoDefaultExcludes>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="readme.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="project.json" />
  </ItemGroup>
  <Target Name="PackageLibGit2SharpNativeBinaries" BeforeTargets="ConvertItems;GetCopyToOutputDirectoryItems">
    <ItemGroup>
      <!-- Adapt the copy behavior  -->
      <NoneToContentPort Include="@(None)" Condition=" '%(None.CopyToOutputDirectory)' == 'PreserveNewest' " />
      <None Remove="@(NoneToContentPort)" />
      <Content Include="@(NoneToContentPort)">
        <Link>build\MSBuildFull\%(NoneToContentPort.Link)</Link>
        <CopyToOutputDirectory />
        <PackageDirectory>build\MSBuildFull</PackageDirectory>
      </Content>
      <Content Include="@(NoneToContentPort)">
        <Link>build\MSBuildCore\%(NoneToContentPort.Link)</Link>
        <CopyToOutputDirectory />
        <PackageDirectory>build\MSBuildCore</PackageDirectory>
      </Content>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <ProjectReference Include="..\NerdBank.GitVersioning.Tasks\Nerdbank.GitVersioning.Tasks.csproj">
      <PackageDirectory>build</PackageDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(NuProjPath)\NuProj.targets" />
  <Target Name="ExpandForNpmPackage" DependsOnTargets="GenerateNuSpec;PrepareForBuild" AfterTargets="GenerateNuSpec">
    <PropertyGroup>
      <NpmPackageLayoutDir>..\nerdbank-gitversioning.npm\out\nbgv.nuget\</NpmPackageLayoutDir>
    </PropertyGroup>
    <ItemGroup>
      <NpmPackageLayout Include="@(PackageFile)">
        <TargetPath Condition=" '%(PackageFile.TargetPath)' != '' ">$(NpmPackageLayoutDir)$([System.IO.Path]::GetDirectoryName('%(PackageFile.TargetPath)'))\%(FileName)%(Extension)</TargetPath>
        <TargetPath Condition=" '%(PackageFile.TargetPath)' == '' ">$(NpmPackageLayoutDir)%(FileName)%(Extension)</TargetPath>
      </NpmPackageLayout>
    </ItemGroup>
    <Copy SourceFiles="@(NpmPackageLayout)" DestinationFiles="@(NpmPackageLayout->'%(TargetPath)')" />
  </Target>
  <Target Name="FixCrossTargetingProjectReferences" AfterTargets="ResolveProjectReferences">
    <ItemGroup>
      <CrossTargetProjects Include="@(_MSBuildProjectReferenceExistent)">
        <SetPlatform>TargetFramework=net45;%(_MSBuildProjectReferenceExistent.SetPlatform)</SetPlatform>
        <SetTargetFramework>TargetFramework=net45;ProjectHasSingleTargetFramework=false</SetTargetFramework>
        <TargetSubdirectory>MSBuildFull</TargetSubdirectory>
      </CrossTargetProjects>
      <CrossTargetProjects Include="@(_MSBuildProjectReferenceExistent)">
        <SetPlatform>TargetFramework=netcoreapp1.0;%(_MSBuildProjectReferenceExistent.SetPlatform)</SetPlatform>
        <SetTargetFramework>TargetFramework=netcoreapp1.0;ProjectHasSingleTargetFramework=false</SetTargetFramework>
        <TargetSubdirectory>MSBuildCore</TargetSubdirectory>
      </CrossTargetProjects>
      <_MSBuildProjectReferenceExistent Remove="@(CrossTargetProjects)" />
      <_MSBuildProjectReferenceExistent Include="@(CrossTargetProjects)" />
    </ItemGroup>
    <!-- Build the default target of our P2P ref to ensure it builds. Hacky workaround.-->
    <MSBuild Projects="@(CrossTargetProjects)"
			 BuildInParallel="true"
			 Properties="TargetFramework=netcoreapp1.0;ProjectHasSingleTargetFramework=false"
			 Condition=" '$(BuildingInsideVisualStudio)' != 'true' " />
  </Target>
  <Target Name="SkipFrameworkAssemblies" AfterTargets="GetPackageFiles">
    <ItemGroup>
      <PackageFile Remove="@(PackageFile)" Condition="
         $([System.String]::new('%(TargetPath)').StartsWith('build\')) and
        !$([System.String]::new('%(TargetPath)').StartsWith('build\MSBuildFull\lib\')) and
        !$([System.String]::new('%(TargetPath)').StartsWith('build\MSBuildCore\lib\')) and
        '%(FileName)' != 'NerdBank.GitVersioning' and
        '%(FileName)' != 'NerdBank.GitVersioning.Tasks' and
        '%(FileName)' != 'MSBuildExtensionTask' and
        '%(FileName)' != 'LibGit2Sharp' and
        '%(FileName)' != 'Validation' and
        '%(FileName)' != 'Newtonsoft.Json' and
        '%(FileName)' != 'PInvoke.Kernel32' and
        '%(FileName)' != 'PInvoke.MsCorEE' and
        '%(FileName)' != 'PInvoke.Windows.Core' and
        '%(Extension)' == '.dll'
        " />
    </ItemGroup>
  </Target>
</Project>